Não terminais inúteis na gramática

    array
    array_size


Terminais sem uso na gramática

    KW_IF
    KW_THEN
    KW_ELSE
    KW_WHILE
    KW_GOTO
    KW_PRINT
    KW_RETURN
    OPERATOR_LE
    OPERATOR_GE
    OPERATOR_EQ
    OPERATOR_DIF
    LIT_STRING
    TOKEN_ERROR
    '<'
    '>'
    '+'
    '-'
    '*'


Regras inúteis na gramática

   32 array: '[' array_size ']'

   33 array_size: LIT_INTEGER
   34           | %empty


Regras inúteis no analisador por causa de conflitos

   18 simple_cmd: %empty


Estado 1 conflitos: 1 de deslocamento/redução
Estado 2 conflitos: 1 de deslocamento/redução
Estado 3 conflitos: 1 de deslocamento/redução
Estado 47 conflitos: 1 de deslocamento/redução
Estado 52 conflitos: 1 de deslocamento/redução
Estado 56 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: programa $end

    1 programa: decl

    2 decl: global_var ';' decl
    3     | function decl
    4     | %empty

    5 function: type TK_IDENTIFIER '(' params ')' cmd_block

    6 type: KW_CHAR
    7     | KW_INT
    8     | KW_FLOAT

    9 params: type TK_IDENTIFIER more_params
   10       | %empty

   11 more_params: ',' type TK_IDENTIFIER more_params
   12            | %empty

   13 cmd_block: '{' simple_cmd ';' '}'
   14          | ';'

   15 simple_cmd: label simple_cmd
   16           | KW_READ simple_cmd
   17           | ';'
   18           | %empty

   19 global_var: KW_CHAR TK_IDENTIFIER ':' arr_element
   20           | KW_CHAR TK_IDENTIFIER '[' LIT_INTEGER ']' initialized_array
   21           | KW_INT TK_IDENTIFIER ':' arr_element
   22           | KW_INT TK_IDENTIFIER '[' LIT_INTEGER ']' initialized_array
   23           | KW_FLOAT TK_IDENTIFIER ':' LIT_INTEGER '/' LIT_INTEGER

   24 initialized_array: ':' arr_elements
   25                  | %empty

   26 arr_elements: arr_element more_elements

   27 more_elements: arr_elements
   28              | %empty

   29 arr_element: LIT_INTEGER
   30            | LIT_CHAR

   31 label: TK_IDENTIFIER ':'


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '(' (40) 5
    ')' (41) 5
    '*' (42)
    '+' (43)
    ',' (44) 11
    '-' (45)
    '/' (47) 23
    ':' (58) 19 21 23 24 31
    ';' (59) 2 13 14 17
    '<' (60)
    '>' (62)
    '[' (91) 20 22
    ']' (93) 20 22
    '{' (123) 13
    '}' (125) 13
    error (256)
    KW_CHAR (258) 6 19 20
    KW_INT (259) 7 21 22
    KW_FLOAT (260) 8 23
    KW_IF (261)
    KW_THEN (262)
    KW_ELSE (263)
    KW_WHILE (264)
    KW_GOTO (265)
    KW_READ (266) 16
    KW_PRINT (267)
    KW_RETURN (268)
    OPERATOR_LE (269)
    OPERATOR_GE (270)
    OPERATOR_EQ (271)
    OPERATOR_DIF (272)
    TK_IDENTIFIER (273) 5 9 11 19 20 21 22 23 31
    LIT_INTEGER (274) 20 22 23 29
    LIT_CHAR (275) 30
    LIT_STRING (276)
    TOKEN_ERROR (277)


Não terminais com as regras onde eles aparecem

    $accept (38)
        à esquerda: 0
    programa (39)
        à esquerda: 1
        à direita: 0
    decl (40)
        à esquerda: 2 3 4
        à direita: 1 2 3
    function (41)
        à esquerda: 5
        à direita: 3
    type (42)
        à esquerda: 6 7 8
        à direita: 5 9 11
    params (43)
        à esquerda: 9 10
        à direita: 5
    more_params (44)
        à esquerda: 11 12
        à direita: 9 11
    cmd_block (45)
        à esquerda: 13 14
        à direita: 5
    simple_cmd (46)
        à esquerda: 15 16 17 18
        à direita: 13 15 16
    global_var (47)
        à esquerda: 19 20 21 22 23
        à direita: 2
    initialized_array (48)
        à esquerda: 24 25
        à direita: 20 22
    arr_elements (49)
        à esquerda: 26
        à direita: 24 27
    more_elements (50)
        à esquerda: 27 28
        à direita: 26
    arr_element (51)
        à esquerda: 29 30
        à direita: 19 21 26
    label (52)
        à esquerda: 31
        à direita: 15


Estado 0

    0 $accept: . programa $end

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    $padrão  reduzir usando a regra 4 (decl)

    programa    ir ao estado 4
    decl        ir ao estado 5
    function    ir ao estado 6
    type        ir ao estado 7
    global_var  ir ao estado 8


Estado 1

    6 type: KW_CHAR .
   19 global_var: KW_CHAR . TK_IDENTIFIER ':' arr_element
   20           | KW_CHAR . TK_IDENTIFIER '[' LIT_INTEGER ']' initialized_array

    TK_IDENTIFIER  deslocar, e ir ao estado 9

    TK_IDENTIFIER  [reduzir usando a regra 6 (type)]


Estado 2

    7 type: KW_INT .
   21 global_var: KW_INT . TK_IDENTIFIER ':' arr_element
   22           | KW_INT . TK_IDENTIFIER '[' LIT_INTEGER ']' initialized_array

    TK_IDENTIFIER  deslocar, e ir ao estado 10

    TK_IDENTIFIER  [reduzir usando a regra 7 (type)]


Estado 3

    8 type: KW_FLOAT .
   23 global_var: KW_FLOAT . TK_IDENTIFIER ':' LIT_INTEGER '/' LIT_INTEGER

    TK_IDENTIFIER  deslocar, e ir ao estado 11

    TK_IDENTIFIER  [reduzir usando a regra 8 (type)]


Estado 4

    0 $accept: programa . $end

    $end  deslocar, e ir ao estado 12


Estado 5

    1 programa: decl .

    $padrão  reduzir usando a regra 1 (programa)


Estado 6

    3 decl: function . decl

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    $padrão  reduzir usando a regra 4 (decl)

    decl        ir ao estado 13
    function    ir ao estado 6
    type        ir ao estado 7
    global_var  ir ao estado 8


Estado 7

    5 function: type . TK_IDENTIFIER '(' params ')' cmd_block

    TK_IDENTIFIER  deslocar, e ir ao estado 14


Estado 8

    2 decl: global_var . ';' decl

    ';'  deslocar, e ir ao estado 15


Estado 9

   19 global_var: KW_CHAR TK_IDENTIFIER . ':' arr_element
   20           | KW_CHAR TK_IDENTIFIER . '[' LIT_INTEGER ']' initialized_array

    ':'  deslocar, e ir ao estado 16
    '['  deslocar, e ir ao estado 17


Estado 10

   21 global_var: KW_INT TK_IDENTIFIER . ':' arr_element
   22           | KW_INT TK_IDENTIFIER . '[' LIT_INTEGER ']' initialized_array

    ':'  deslocar, e ir ao estado 18
    '['  deslocar, e ir ao estado 19


Estado 11

   23 global_var: KW_FLOAT TK_IDENTIFIER . ':' LIT_INTEGER '/' LIT_INTEGER

    ':'  deslocar, e ir ao estado 20


Estado 12

    0 $accept: programa $end .

    $padrão  aceitar


Estado 13

    3 decl: function decl .

    $padrão  reduzir usando a regra 3 (decl)


Estado 14

    5 function: type TK_IDENTIFIER . '(' params ')' cmd_block

    '('  deslocar, e ir ao estado 21


Estado 15

    2 decl: global_var ';' . decl

    KW_CHAR   deslocar, e ir ao estado 1
    KW_INT    deslocar, e ir ao estado 2
    KW_FLOAT  deslocar, e ir ao estado 3

    $padrão  reduzir usando a regra 4 (decl)

    decl        ir ao estado 22
    function    ir ao estado 6
    type        ir ao estado 7
    global_var  ir ao estado 8


Estado 16

   19 global_var: KW_CHAR TK_IDENTIFIER ':' . arr_element

    LIT_INTEGER  deslocar, e ir ao estado 23
    LIT_CHAR     deslocar, e ir ao estado 24

    arr_element  ir ao estado 25


Estado 17

   20 global_var: KW_CHAR TK_IDENTIFIER '[' . LIT_INTEGER ']' initialized_array

    LIT_INTEGER  deslocar, e ir ao estado 26


Estado 18

   21 global_var: KW_INT TK_IDENTIFIER ':' . arr_element

    LIT_INTEGER  deslocar, e ir ao estado 23
    LIT_CHAR     deslocar, e ir ao estado 24

    arr_element  ir ao estado 27


Estado 19

   22 global_var: KW_INT TK_IDENTIFIER '[' . LIT_INTEGER ']' initialized_array

    LIT_INTEGER  deslocar, e ir ao estado 28


Estado 20

   23 global_var: KW_FLOAT TK_IDENTIFIER ':' . LIT_INTEGER '/' LIT_INTEGER

    LIT_INTEGER  deslocar, e ir ao estado 29


Estado 21

    5 function: type TK_IDENTIFIER '(' . params ')' cmd_block

    KW_CHAR   deslocar, e ir ao estado 30
    KW_INT    deslocar, e ir ao estado 31
    KW_FLOAT  deslocar, e ir ao estado 32

    $padrão  reduzir usando a regra 10 (params)

    type    ir ao estado 33
    params  ir ao estado 34


Estado 22

    2 decl: global_var ';' decl .

    $padrão  reduzir usando a regra 2 (decl)


Estado 23

   29 arr_element: LIT_INTEGER .

    $padrão  reduzir usando a regra 29 (arr_element)


Estado 24

   30 arr_element: LIT_CHAR .

    $padrão  reduzir usando a regra 30 (arr_element)


Estado 25

   19 global_var: KW_CHAR TK_IDENTIFIER ':' arr_element .

    $padrão  reduzir usando a regra 19 (global_var)


Estado 26

   20 global_var: KW_CHAR TK_IDENTIFIER '[' LIT_INTEGER . ']' initialized_array

    ']'  deslocar, e ir ao estado 35


Estado 27

   21 global_var: KW_INT TK_IDENTIFIER ':' arr_element .

    $padrão  reduzir usando a regra 21 (global_var)


Estado 28

   22 global_var: KW_INT TK_IDENTIFIER '[' LIT_INTEGER . ']' initialized_array

    ']'  deslocar, e ir ao estado 36


Estado 29

   23 global_var: KW_FLOAT TK_IDENTIFIER ':' LIT_INTEGER . '/' LIT_INTEGER

    '/'  deslocar, e ir ao estado 37


Estado 30

    6 type: KW_CHAR .

    $padrão  reduzir usando a regra 6 (type)


Estado 31

    7 type: KW_INT .

    $padrão  reduzir usando a regra 7 (type)


Estado 32

    8 type: KW_FLOAT .

    $padrão  reduzir usando a regra 8 (type)


Estado 33

    9 params: type . TK_IDENTIFIER more_params

    TK_IDENTIFIER  deslocar, e ir ao estado 38


Estado 34

    5 function: type TK_IDENTIFIER '(' params . ')' cmd_block

    ')'  deslocar, e ir ao estado 39


Estado 35

   20 global_var: KW_CHAR TK_IDENTIFIER '[' LIT_INTEGER ']' . initialized_array

    ':'  deslocar, e ir ao estado 40

    $padrão  reduzir usando a regra 25 (initialized_array)

    initialized_array  ir ao estado 41


Estado 36

   22 global_var: KW_INT TK_IDENTIFIER '[' LIT_INTEGER ']' . initialized_array

    ':'  deslocar, e ir ao estado 40

    $padrão  reduzir usando a regra 25 (initialized_array)

    initialized_array  ir ao estado 42


Estado 37

   23 global_var: KW_FLOAT TK_IDENTIFIER ':' LIT_INTEGER '/' . LIT_INTEGER

    LIT_INTEGER  deslocar, e ir ao estado 43


Estado 38

    9 params: type TK_IDENTIFIER . more_params

    ','  deslocar, e ir ao estado 44

    $padrão  reduzir usando a regra 12 (more_params)

    more_params  ir ao estado 45


Estado 39

    5 function: type TK_IDENTIFIER '(' params ')' . cmd_block

    ';'  deslocar, e ir ao estado 46
    '{'  deslocar, e ir ao estado 47

    cmd_block  ir ao estado 48


Estado 40

   24 initialized_array: ':' . arr_elements

    LIT_INTEGER  deslocar, e ir ao estado 23
    LIT_CHAR     deslocar, e ir ao estado 24

    arr_elements  ir ao estado 49
    arr_element   ir ao estado 50


Estado 41

   20 global_var: KW_CHAR TK_IDENTIFIER '[' LIT_INTEGER ']' initialized_array .

    $padrão  reduzir usando a regra 20 (global_var)


Estado 42

   22 global_var: KW_INT TK_IDENTIFIER '[' LIT_INTEGER ']' initialized_array .

    $padrão  reduzir usando a regra 22 (global_var)


Estado 43

   23 global_var: KW_FLOAT TK_IDENTIFIER ':' LIT_INTEGER '/' LIT_INTEGER .

    $padrão  reduzir usando a regra 23 (global_var)


Estado 44

   11 more_params: ',' . type TK_IDENTIFIER more_params

    KW_CHAR   deslocar, e ir ao estado 30
    KW_INT    deslocar, e ir ao estado 31
    KW_FLOAT  deslocar, e ir ao estado 32

    type  ir ao estado 51


Estado 45

    9 params: type TK_IDENTIFIER more_params .

    $padrão  reduzir usando a regra 9 (params)


Estado 46

   14 cmd_block: ';' .

    $padrão  reduzir usando a regra 14 (cmd_block)


Estado 47

   13 cmd_block: '{' . simple_cmd ';' '}'

    KW_READ        deslocar, e ir ao estado 52
    TK_IDENTIFIER  deslocar, e ir ao estado 53
    ';'            deslocar, e ir ao estado 54

    ';'  [reduzir usando a regra 18 (simple_cmd)]

    simple_cmd  ir ao estado 55
    label       ir ao estado 56


Estado 48

    5 function: type TK_IDENTIFIER '(' params ')' cmd_block .

    $padrão  reduzir usando a regra 5 (function)


Estado 49

   24 initialized_array: ':' arr_elements .

    $padrão  reduzir usando a regra 24 (initialized_array)


Estado 50

   26 arr_elements: arr_element . more_elements

    LIT_INTEGER  deslocar, e ir ao estado 23
    LIT_CHAR     deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 28 (more_elements)

    arr_elements   ir ao estado 57
    more_elements  ir ao estado 58
    arr_element    ir ao estado 50


Estado 51

   11 more_params: ',' type . TK_IDENTIFIER more_params

    TK_IDENTIFIER  deslocar, e ir ao estado 59


Estado 52

   16 simple_cmd: KW_READ . simple_cmd

    KW_READ        deslocar, e ir ao estado 52
    TK_IDENTIFIER  deslocar, e ir ao estado 53
    ';'            deslocar, e ir ao estado 54

    ';'  [reduzir usando a regra 18 (simple_cmd)]

    simple_cmd  ir ao estado 60
    label       ir ao estado 56


Estado 53

   31 label: TK_IDENTIFIER . ':'

    ':'  deslocar, e ir ao estado 61


Estado 54

   17 simple_cmd: ';' .

    $padrão  reduzir usando a regra 17 (simple_cmd)


Estado 55

   13 cmd_block: '{' simple_cmd . ';' '}'

    ';'  deslocar, e ir ao estado 62


Estado 56

   15 simple_cmd: label . simple_cmd

    KW_READ        deslocar, e ir ao estado 52
    TK_IDENTIFIER  deslocar, e ir ao estado 53
    ';'            deslocar, e ir ao estado 54

    ';'  [reduzir usando a regra 18 (simple_cmd)]

    simple_cmd  ir ao estado 63
    label       ir ao estado 56


Estado 57

   27 more_elements: arr_elements .

    $padrão  reduzir usando a regra 27 (more_elements)


Estado 58

   26 arr_elements: arr_element more_elements .

    $padrão  reduzir usando a regra 26 (arr_elements)


Estado 59

   11 more_params: ',' type TK_IDENTIFIER . more_params

    ','  deslocar, e ir ao estado 44

    $padrão  reduzir usando a regra 12 (more_params)

    more_params  ir ao estado 64


Estado 60

   16 simple_cmd: KW_READ simple_cmd .

    $padrão  reduzir usando a regra 16 (simple_cmd)


Estado 61

   31 label: TK_IDENTIFIER ':' .

    $padrão  reduzir usando a regra 31 (label)


Estado 62

   13 cmd_block: '{' simple_cmd ';' . '}'

    '}'  deslocar, e ir ao estado 65


Estado 63

   15 simple_cmd: label simple_cmd .

    $padrão  reduzir usando a regra 15 (simple_cmd)


Estado 64

   11 more_params: ',' type TK_IDENTIFIER more_params .

    $padrão  reduzir usando a regra 11 (more_params)


Estado 65

   13 cmd_block: '{' simple_cmd ';' '}' .

    $padrão  reduzir usando a regra 13 (cmd_block)
